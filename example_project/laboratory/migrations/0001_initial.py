# Generated by Django 5.1.5 on 2025-01-15 18:12

import django.core.validators
import django.db.models.deletion
import django_pint_field.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Laboratory",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=200)),
                ("location", models.CharField(max_length=200)),
                ("established_date", models.DateField(blank=True, null=True)),
                (
                    "location_lat",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Latitude coordinates (e.g., 40.7128)",
                        max_digits=9,
                        verbose_name="Latitude",
                    ),
                ),
                (
                    "location_lng",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Longitude coordinates (e.g., -74.0060)",
                        max_digits=9,
                        verbose_name="Longitude",
                    ),
                ),
                (
                    "containment_level",
                    models.IntegerField(
                        choices=[
                            (1, "Minimal Risk - Safe for Interns"),
                            (2, "Moderate Risk - Mad Science Basics"),
                            (3, "High Risk - Full Mad Science"),
                            (4, "Extreme Risk - Reality Bending"),
                            (5, "Ultimate Risk - Timeline Altering"),
                        ],
                        default=2,
                    ),
                ),
                (
                    "dimensional_stability",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Percentage stability of local spacetime",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "is_evil",
                    models.BooleanField(default=False, help_text="Does this lab regularly create supervillains?"),
                ),
            ],
            options={
                "verbose_name_plural": "Laboratories",
            },
        ),
        migrations.CreateModel(
            name="Universe",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("year_introduced", models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="IncidentReport",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("timestamp", models.DateTimeField()),
                ("description", models.TextField()),
                (
                    "severity",
                    models.IntegerField(
                        choices=[
                            (1, "Minor - Easily Contained"),
                            (2, "Moderate - Local Effects"),
                            (3, "Major - City-wide Impact"),
                            (4, "Severe - Global Implications"),
                            (5, "Catastrophic - Reality Breach"),
                        ],
                        default=2,
                    ),
                ),
                (
                    "affected_radius",
                    django_pint_field.models.DecimalPintField(
                        default_unit="kilometer",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[("kilometer", "kilometer"), ("m", "meter"), ("mi", "mile")],
                    ),
                ),
                (
                    "temporal_displacement",
                    django_pint_field.models.DecimalPintField(
                        default_unit="year",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[("year", "year"), ("mo", "month"), ("d", "day")],
                    ),
                ),
                (
                    "laboratory",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="laboratory.laboratory"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ExperimentalDevice",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=200)),
                (
                    "fuel_tank_capacity",
                    django_pint_field.models.IntegerPintField(
                        default_unit="liter",
                        help_text="Total fuel tank capacity in whole units",
                        unit_choices=[
                            ("liter", "liter"),
                            ("gal", "gallon"),
                            ("m³", "cubic_meter"),
                            ("shot", "shot"),
                            ("hogshead", "hogshead"),
                        ],
                    ),
                ),
                (
                    "memory_capacity",
                    django_pint_field.models.IntegerPintField(
                        default_unit="gigabyte",
                        help_text="Memory storage in whole units",
                        unit_choices=[("gigabyte", "gigabyte"), ("TB", "terabyte"), ("PB", "petabyte")],
                    ),
                ),
                (
                    "power_output",
                    django_pint_field.models.DecimalPintField(
                        default_unit="gigawatt",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[("gigawatt", "gigawatt"), ("MW", "megawatt"), ("kW", "kilowatt"), ("W", "watt")],
                    ),
                ),
                (
                    "quantum_uncertainty",
                    django_pint_field.models.DecimalPintField(
                        default_unit="meV",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[
                            ("meV", "meV"),
                            ("Ry", "rydberg"),
                            ("Eh", "hartree"),
                            ("µeV", "ueV"),
                            ("Ton of TNT", "ton_TNT"),
                            ("Ton of Oil Equivalent", "toe"),
                        ],
                    ),
                ),
                (
                    "dimensional_wavelength",
                    django_pint_field.models.DecimalPintField(
                        default_unit="angstrom",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[("angstrom", "angstrom"), ("nm", "nanometer"), ("µm", "micrometer")],
                    ),
                ),
                (
                    "portal_diameter",
                    django_pint_field.models.DecimalPintField(
                        default_unit="meter",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[("meter", "meter"), ("centimeter", "centimeter"), ("foot", "foot")],
                    ),
                ),
                (
                    "laboratory",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="laboratory.laboratory"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EnergyReading",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("timestamp", models.DateTimeField()),
                (
                    "background_radiation",
                    django_pint_field.models.DecimalPintField(
                        default_unit="microsievert_per_hour",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[
                            ("microsievert_per_hour", "microsievert_per_hour"),
                            ("mSv/h", "millisievert_per_hour"),
                            ("Sv/h", "sievert_per_hour"),
                        ],
                    ),
                ),
                (
                    "tachyon_flux",
                    django_pint_field.models.DecimalPintField(
                        default_unit="counts_per_second",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[
                            ("counts_per_second", "counts_per_second"),
                            ("kparticles/s", "kilocounts_per_second"),
                            ("Mparticles/s", "megacounts_per_second"),
                        ],
                    ),
                ),
                (
                    "dark_energy_density",
                    django_pint_field.models.DecimalPintField(
                        default_unit="joule_per_cubic_meter",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[
                            ("joule_per_cubic_meter", "joule_per_cubic_meter"),
                            ("kJ/m³", "kilojoule_per_cubic_meter"),
                            ("MJ/m³", "megajoule_per_cubic_meter"),
                        ],
                    ),
                ),
                (
                    "laboratory",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="laboratory.laboratory"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DimensionalRift",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("detected_at", models.DateTimeField()),
                ("is_stable", models.BooleanField(default=False)),
                (
                    "diameter",
                    django_pint_field.models.DecimalPintField(
                        default_unit="meter",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[("meter", "meter"), ("km", "kilometer"), ("ft", "foot")],
                    ),
                ),
                (
                    "energy_output",
                    django_pint_field.models.DecimalPintField(
                        default_unit="teraelectronvolt",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[
                            ("teraelectronvolt", "teraelectronvolt"),
                            ("GeV", "gigaelectronvolt"),
                            ("MeV", "megaelectronvolt"),
                        ],
                    ),
                ),
                (
                    "spacetime_curvature",
                    django_pint_field.models.DecimalPintField(
                        default_unit="inverse_meter_squared",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[
                            ("inverse_meter_squared", "inverse_meter_squared"),
                            ("km⁻2", "inverse_kilometer_squared"),
                        ],
                    ),
                ),
                (
                    "laboratory",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="laboratory.laboratory"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AnomalousSubstance",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=200)),
                (
                    "containment_temperature",
                    django_pint_field.models.DecimalPintField(
                        default_unit="kelvin",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[("kelvin", "kelvin"), ("°C", "degC"), ("°F", "degF")],
                    ),
                ),
                (
                    "container_volume",
                    django_pint_field.models.IntegerPintField(
                        default_unit="milliliter",
                        help_text="Standard container volume in whole units",
                        unit_choices=[("milliliter", "milliliter"), ("L", "liter"), ("gallon", "gallon")],
                    ),
                ),
                (
                    "critical_mass",
                    django_pint_field.models.DecimalPintField(
                        default_unit="microgram",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[("microgram", "microgram"), ("mg", "milligram"), ("g", "gram")],
                    ),
                ),
                (
                    "half_life",
                    django_pint_field.models.DecimalPintField(
                        default_unit="day",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[("day", "day"), ("hour", "hour"), ("minute", "minute")],
                    ),
                ),
                (
                    "typical_shelf_life",
                    django_pint_field.models.IntegerPintField(
                        default_unit="day",
                        help_text="Shelf life in whole time units",
                        unit_choices=[("day", "day"), ("mo", "month"), ("yr", "year")],
                    ),
                ),
                (
                    "reality_warping_field",
                    django_pint_field.models.DecimalPintField(
                        default_unit="millitesla",
                        display_decimal_places=None,
                        help_text="Typical field strength of any reality warping effect",
                        rounding_method=None,
                        unit_choices=[
                            ("millitesla", "millitesla"),
                            ("µT", "microtesla"),
                            ("nT", "nanotesla"),
                            ("gigagamma", "gigagamma"),
                        ],
                    ),
                ),
                (
                    "laboratory",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="laboratory.laboratory"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SafetyProtocol",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "containment_field_strength",
                    django_pint_field.models.DecimalPintField(
                        default_unit="megavolt_per_meter",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[
                            ("megavolt_per_meter", "megavolt_per_meter"),
                            ("kV/m", "kilovolt_per_meter"),
                            ("V/m", "volt_per_meter"),
                        ],
                    ),
                ),
                (
                    "shield_frequency",
                    django_pint_field.models.DecimalPintField(
                        default_unit="gigahertz",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[
                            ("gigahertz", "gigahertz"),
                            ("THz", "terahertz"),
                            ("MHz", "megahertz"),
                            ("kHz", "kilohertz"),
                            ("Hz", "hertz"),
                        ],
                    ),
                ),
                (
                    "laboratory",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="laboratory.laboratory"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TestSubject",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("identifier", models.CharField(max_length=50)),
                ("creation_date", models.DateTimeField()),
                ("intelligence_quotient", models.PositiveSmallIntegerField(help_text="Measured in standard IQ units")),
                (
                    "processing_speed",
                    django_pint_field.models.DecimalPintField(
                        default_unit="MIPS",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[("MIPS", "MIPS"), ("GIPS", "GIPS"), ("TIPS", "TIPS")],
                    ),
                ),
                (
                    "power_consumption",
                    django_pint_field.models.DecimalPintField(
                        default_unit="watt",
                        display_decimal_places=None,
                        rounding_method=None,
                        unit_choices=[("watt", "watt"), ("kW", "kilowatt"), ("mW", "milliwatt")],
                    ),
                ),
                (
                    "laboratory",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="laboratory.laboratory"),
                ),
            ],
        ),
        migrations.AddField(
            model_name="laboratory",
            name="universe",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="laboratory.universe"),
        ),
    ]
